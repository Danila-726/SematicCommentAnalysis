import streamlit as st
from streamlit.components.v1 import html
from service_functions import validate_url, is_url_rutube
import numpy as np
import matplotlib.pyplot as plt
from comment_getter import fetch_comments
from preprocess_text import prepare_data_for_model
from analyze_comment import get_data_with_predicted_label

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
st.set_page_config(page_title="–ê–Ω–∞–ª–∏–∑ –¥–∞–Ω–Ω—ã—Ö", layout="wide")

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å–µ—Å—Å–∏–∏
if 'valid_url' not in st.session_state:
    st.session_state.valid_url = False

st.title("üìä –ê–Ω–∞–ª–∏—Ç–∏—á–µ—Å–∫–∏–π –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–∞–Ω–Ω—ã—Ö")

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –ø—Ä–æ–∫—Ä—É—Ç–∫–∏
def scroll_down():
    html("<script>window.scrollTo(0, document.body.scrollHeight);</script>")

# –û—Å–Ω–æ–≤–Ω–æ–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
with st.container():
    st.subheader("–®–∞–≥ 1: –í–≤–µ–¥–∏—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –¥–∞–Ω–Ω—ã–µ")
    url = st.text_input("–í—Å—Ç–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –∑–¥–µ—Å—å:", placeholder="https://video/video-id")

    if url:
        if validate_url(url):
            st.session_state.valid_url = True
            st.success("‚úì –°—Å—ã–ª–∫–∞ –≤–∞–ª–∏–¥–Ω–∞!")
            scroll_down()
        else:
            st.error("‚ö†Ô∏è –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —Å—Å—ã–ª–∫–∏!")
            st.session_state.valid_url = False

# –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≥—Ä–∞—Ñ–∏–∫–æ–≤ –ø—Ä–∏ –≤–∞–ª–∏–¥–Ω–æ–π —Å—Å—ã–ª–∫–µ
if st.session_state.valid_url:
    with st.container():
        st.subheader("–®–∞–≥ 2: –í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö")

        if is_url_rutube(url):
            data = fetch_comments(url)
        else:
            # –∏—Å–ø—Ä–∞–≤–∏—Ç—å –¥–ª—è –≤–∫
            data = fetch_comments(url)

        data, data_for_model = prepare_data_for_model(data, "text")
        data = get_data_with_predicted_label(data_for_model=data_for_model,
                                             data=data,
                                             path_to_model='sklearn-models/log_model.joblib',
                                             column_with_text='text_prep')

        fig, ax = plt.subplots(1, 3, figsize=(10, 2))

        ax[0].pie(data['predicted_label'].value_counts(),
               labels=['negative', 'positive'],
               colors=['#FC5A50', '#9ACD32'],
               autopct='%1.1f%%',
               startangle=90,
               wedgeprops={'linewidth': 0.5, 'edgecolor': 'white'})

        plt.tight_layout(pad=0.5)

        st.pyplot(fig, clear_figure=True)

# –°—Ç–∏–ª–∏–∑–∞—Ü–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã
st.markdown("""
<style>
    [data-testid="stTextInput"] {
        margin: 10px 0;
    }
    .stPlot {
        box-shadow: 0 0 15px #eee;
        border-radius: 10px;
        padding: 20px;
    }
    .stAlert {
        margin: 20px 0;
    }
</style>
""", unsafe_allow_html=True)